/*_____get datalog program_______
?- drone_self_info(UAV_ID,LOC_NODE_ID,VIEW_RANGE,LOAD_NUM,CUR_ELECTRICITY,FLYING_STATE,CUR_PATH_LENGTH,CUR_RESOURCE_COST,FLEET_ID,SENSE_RANGE,LOAD_CAP,MAX_ELECTRICITY,CHARGE_EFFICIENCY,POS_X,POS_Y).

drone_self_info(DRONE_SELF_INFO_A15_UAV_ID,DRONE_SELF_INFO_A15_LOC_NODE_ID,DRONE_SELF_INFO_A15_VIEW_RANGE,DRONE_SELF_INFO_A15_LOAD_NUM,DRONE_SELF_INFO_A15_CUR_ELECTRICITY,DRONE_SELF_INFO_A15_FLYING_STATE,DRONE_SELF_INFO_A15_CUR_PATH_LENGTH,DRONE_SELF_INFO_A15_CUR_RESOURCE_COST,DRONE_SELF_INFO_A15_FLEET_ID,DRONE_SELF_INFO_A15_SENSE_RANGE,DRONE_SELF_INFO_A15_LOAD_CAP,DRONE_SELF_INFO_A15_MAX_ELECTRICITY,DRONE_SELF_INFO_A15_CHARGE_EFFICIENCY,DRONE_SELF_INFO_A15_POS_X,DRONE_SELF_INFO_A15_POS_Y) :- drone_self_info_med(DRONE_SELF_INFO_A15_UAV_ID,DRONE_SELF_INFO_A15_LOC_NODE_ID,DRONE_SELF_INFO_A15_VIEW_RANGE,DRONE_SELF_INFO_A15_LOAD_NUM,DRONE_SELF_INFO_A15_CUR_ELECTRICITY,DRONE_SELF_INFO_A15_FLYING_STATE,DRONE_SELF_INFO_A15_CUR_PATH_LENGTH,DRONE_SELF_INFO_A15_CUR_RESOURCE_COST,DRONE_SELF_INFO_A15_FLEET_ID,DRONE_SELF_INFO_A15_SENSE_RANGE,DRONE_SELF_INFO_A15_LOAD_CAP,DRONE_SELF_INFO_A15_MAX_ELECTRICITY,DRONE_SELF_INFO_A15_CHARGE_EFFICIENCY,DRONE_SELF_INFO_A15_POS_X,DRONE_SELF_INFO_A15_POS_Y) , not __dummy__delta__insert__drones_cur_state(DRONE_SELF_INFO_A15_UAV_ID,DRONE_SELF_INFO_A15_LOC_NODE_ID,DRONE_SELF_INFO_A15_VIEW_RANGE,DRONE_SELF_INFO_A15_LOAD_NUM,DRONE_SELF_INFO_A15_CUR_ELECTRICITY,DRONE_SELF_INFO_A15_FLYING_STATE,DRONE_SELF_INFO_A15_CUR_PATH_LENGTH,DRONE_SELF_INFO_A15_CUR_RESOURCE_COST,_).

__dummy__delta__insert__drones_cur_state(UID,NID,VR,LN,CE,FS,L,RC,T) :- drone_self_info_med(UID,NID,VR,LN,CE,FS,L,RC,FID,SR,LC,ME,CHE,PX,PY) , drones_config(UID,FID,SR,LC,ME,CHE) , drones_cur_state(UID,_,_,_,_,_,_,_,T) , cur_processes(RID,PID,UID,_,_) , PID = 0 , not drones_cur_state(UID,NID,VR,LN,CE,FS,L,RC,T).

drone_self_info_med(UID,NID,VR,LN,CE,FS,L,RC,FID,SR,LC,ME,CHE,PX,PY) :- drones_cur_state(UID,NID,VR,LN,CE,FS,L,RC,T) , drones_config(UID,FID,SR,LC,ME,CHE) , nodes_config(NID,PX,PY,_) , cur_processes(RID,PID,UID,_,_) , PID = 0.

______________*/

CREATE OR REPLACE VIEW public.drone_self_info AS SELECT __dummy__.col0 AS UAV_ID,__dummy__.col1 AS LOC_NODE_ID,__dummy__.col2 AS VIEW_RANGE,__dummy__.col3 AS LOAD_NUM,__dummy__.col4 AS CUR_ELECTRICITY,__dummy__.col5 AS FLYING_STATE,__dummy__.col6 AS CUR_PATH_LENGTH,__dummy__.col7 AS CUR_RESOURCE_COST,__dummy__.col8 AS FLEET_ID,__dummy__.col9 AS SENSE_RANGE,__dummy__.col10 AS LOAD_CAP,__dummy__.col11 AS MAX_ELECTRICITY,__dummy__.col12 AS CHARGE_EFFICIENCY,__dummy__.col13 AS POS_X,__dummy__.col14 AS POS_Y FROM (SELECT drone_self_info_a15_0.col0 AS col0, drone_self_info_a15_0.col1 AS col1, drone_self_info_a15_0.col2 AS col2, drone_self_info_a15_0.col3 AS col3, drone_self_info_a15_0.col4 AS col4, drone_self_info_a15_0.col5 AS col5, drone_self_info_a15_0.col6 AS col6, drone_self_info_a15_0.col7 AS col7, drone_self_info_a15_0.col8 AS col8, drone_self_info_a15_0.col9 AS col9, drone_self_info_a15_0.col10 AS col10, drone_self_info_a15_0.col11 AS col11, drone_self_info_a15_0.col12 AS col12, drone_self_info_a15_0.col13 AS col13, drone_self_info_a15_0.col14 AS col14 FROM (SELECT drone_self_info_med_a15_0.col0 AS col0, drone_self_info_med_a15_0.col1 AS col1, drone_self_info_med_a15_0.col2 AS col2, drone_self_info_med_a15_0.col3 AS col3, drone_self_info_med_a15_0.col4 AS col4, drone_self_info_med_a15_0.col5 AS col5, drone_self_info_med_a15_0.col6 AS col6, drone_self_info_med_a15_0.col7 AS col7, drone_self_info_med_a15_0.col8 AS col8, drone_self_info_med_a15_0.col9 AS col9, drone_self_info_med_a15_0.col10 AS col10, drone_self_info_med_a15_0.col11 AS col11, drone_self_info_med_a15_0.col12 AS col12, drone_self_info_med_a15_0.col13 AS col13, drone_self_info_med_a15_0.col14 AS col14 FROM (SELECT cur_processes_a5_3.UAV_ID AS col0, nodes_config_a4_2.NODE_ID AS col1, drones_cur_state_a9_0.VIEW_RANGE AS col2, drones_cur_state_a9_0.LOAD_NUM AS col3, drones_cur_state_a9_0.CUR_ELECTRICITY AS col4, drones_cur_state_a9_0.FLYING_STATE AS col5, drones_cur_state_a9_0.CUR_PATH_LENGTH AS col6, drones_cur_state_a9_0.CUR_RESOURCE_COST AS col7, drones_config_a6_1.FLEET_ID AS col8, drones_config_a6_1.SENSE_RANGE AS col9, drones_config_a6_1.LOAD_CAP AS col10, drones_config_a6_1.MAX_ELECTRICITY AS col11, drones_config_a6_1.CHARGE_EFFICIENCY AS col12, nodes_config_a4_2.POS_X AS col13, nodes_config_a4_2.POS_Y AS col14 FROM public.drones_cur_state AS drones_cur_state_a9_0, public.drones_config AS drones_config_a6_1, public.nodes_config AS nodes_config_a4_2, public.cur_processes AS cur_processes_a5_3 WHERE cur_processes_a5_3.UAV_ID = drones_config_a6_1.UAV_ID AND cur_processes_a5_3.UAV_ID = drones_cur_state_a9_0.UAV_ID AND nodes_config_a4_2.NODE_ID = drones_cur_state_a9_0.LOC_NODE_ID AND cur_processes_a5_3.PROC_ID = 0 ) AS drone_self_info_med_a15_0 WHERE NOT EXISTS ( SELECT * FROM (SELECT cur_processes_a5_3.UAV_ID AS col0, drone_self_info_med_a15_0.col1 AS col1, drone_self_info_med_a15_0.col2 AS col2, drone_self_info_med_a15_0.col3 AS col3, drone_self_info_med_a15_0.col4 AS col4, drone_self_info_med_a15_0.col5 AS col5, drone_self_info_med_a15_0.col6 AS col6, drone_self_info_med_a15_0.col7 AS col7, drones_cur_state_a9_2.CUR_TIMESTAMP AS col8 FROM (SELECT cur_processes_a5_3.UAV_ID AS col0, nodes_config_a4_2.NODE_ID AS col1, drones_cur_state_a9_0.VIEW_RANGE AS col2, drones_cur_state_a9_0.LOAD_NUM AS col3, drones_cur_state_a9_0.CUR_ELECTRICITY AS col4, drones_cur_state_a9_0.FLYING_STATE AS col5, drones_cur_state_a9_0.CUR_PATH_LENGTH AS col6, drones_cur_state_a9_0.CUR_RESOURCE_COST AS col7, drones_config_a6_1.FLEET_ID AS col8, drones_config_a6_1.SENSE_RANGE AS col9, drones_config_a6_1.LOAD_CAP AS col10, drones_config_a6_1.MAX_ELECTRICITY AS col11, drones_config_a6_1.CHARGE_EFFICIENCY AS col12, nodes_config_a4_2.POS_X AS col13, nodes_config_a4_2.POS_Y AS col14 FROM public.drones_cur_state AS drones_cur_state_a9_0, public.drones_config AS drones_config_a6_1, public.nodes_config AS nodes_config_a4_2, public.cur_processes AS cur_processes_a5_3 WHERE cur_processes_a5_3.UAV_ID = drones_config_a6_1.UAV_ID AND cur_processes_a5_3.UAV_ID = drones_cur_state_a9_0.UAV_ID AND nodes_config_a4_2.NODE_ID = drones_cur_state_a9_0.LOC_NODE_ID AND cur_processes_a5_3.PROC_ID = 0 ) AS drone_self_info_med_a15_0, public.drones_config AS drones_config_a6_1, public.drones_cur_state AS drones_cur_state_a9_2, public.cur_processes AS cur_processes_a5_3 WHERE drones_config_a6_1.FLEET_ID = drone_self_info_med_a15_0.col8 AND drones_config_a6_1.LOAD_CAP = drone_self_info_med_a15_0.col10 AND cur_processes_a5_3.UAV_ID = drones_cur_state_a9_2.UAV_ID AND cur_processes_a5_3.UAV_ID = drones_config_a6_1.UAV_ID AND cur_processes_a5_3.UAV_ID = drone_self_info_med_a15_0.col0 AND drones_config_a6_1.CHARGE_EFFICIENCY = drone_self_info_med_a15_0.col12 AND drones_config_a6_1.SENSE_RANGE = drone_self_info_med_a15_0.col9 AND drones_config_a6_1.MAX_ELECTRICITY = drone_self_info_med_a15_0.col11 AND cur_processes_a5_3.PROC_ID = 0 AND NOT EXISTS ( SELECT * FROM public.drones_cur_state AS drones_cur_state_a9 WHERE drones_cur_state_a9.CUR_TIMESTAMP IS NOT DISTINCT FROM drones_cur_state_a9_2.CUR_TIMESTAMP AND drones_cur_state_a9.CUR_RESOURCE_COST IS NOT DISTINCT FROM drone_self_info_med_a15_0.col7 AND drones_cur_state_a9.CUR_PATH_LENGTH IS NOT DISTINCT FROM drone_self_info_med_a15_0.col6 AND drones_cur_state_a9.FLYING_STATE IS NOT DISTINCT FROM drone_self_info_med_a15_0.col5 AND drones_cur_state_a9.CUR_ELECTRICITY IS NOT DISTINCT FROM drone_self_info_med_a15_0.col4 AND drones_cur_state_a9.LOAD_NUM IS NOT DISTINCT FROM drone_self_info_med_a15_0.col3 AND drones_cur_state_a9.VIEW_RANGE IS NOT DISTINCT FROM drone_self_info_med_a15_0.col2 AND drones_cur_state_a9.LOC_NODE_ID IS NOT DISTINCT FROM drone_self_info_med_a15_0.col1 AND drones_cur_state_a9.UAV_ID IS NOT DISTINCT FROM cur_processes_a5_3.UAV_ID ) ) AS __dummy__delta__insert__drones_cur_state_a9 WHERE __dummy__delta__insert__drones_cur_state_a9.col7 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col7 AND __dummy__delta__insert__drones_cur_state_a9.col6 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col6 AND __dummy__delta__insert__drones_cur_state_a9.col5 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col5 AND __dummy__delta__insert__drones_cur_state_a9.col4 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col4 AND __dummy__delta__insert__drones_cur_state_a9.col3 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col3 AND __dummy__delta__insert__drones_cur_state_a9.col2 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col2 AND __dummy__delta__insert__drones_cur_state_a9.col1 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col1 AND __dummy__delta__insert__drones_cur_state_a9.col0 IS NOT DISTINCT FROM drone_self_info_med_a15_0.col0 ) ) AS drone_self_info_a15_0  ) AS __dummy__;

CREATE OR REPLACE FUNCTION public.drone_self_info_procedure()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
  DECLARE
  text_var1 text;
  text_var2 text;
  text_var3 text;
  temprec record;
  BEGIN
    CREATE TEMPORARY TABLE __temp__drone_self_info WITH OIDS ON COMMIT DROP AS SELECT * FROM public.drone_self_info;
    IF TG_OP = 'INSERT' THEN
      INSERT INTO __temp__drone_self_info SELECT (NEW).*; 
    ELSIF TG_OP = 'UPDATE' THEN
      DELETE FROM __temp__drone_self_info WHERE (UAV_ID,LOC_NODE_ID,VIEW_RANGE,LOAD_NUM,CUR_ELECTRICITY,FLYING_STATE,CUR_PATH_LENGTH,CUR_RESOURCE_COST,FLEET_ID,SENSE_RANGE,LOAD_CAP,MAX_ELECTRICITY,CHARGE_EFFICIENCY,POS_X,POS_Y) = OLD;
      INSERT INTO __temp__drone_self_info SELECT (NEW).*; 
    ELSIF TG_OP = 'DELETE' THEN
      DELETE FROM __temp__drone_self_info WHERE (UAV_ID,LOC_NODE_ID,VIEW_RANGE,LOAD_NUM,CUR_ELECTRICITY,FLYING_STATE,CUR_PATH_LENGTH,CUR_RESOURCE_COST,FLEET_ID,SENSE_RANGE,LOAD_CAP,MAX_ELECTRICITY,CHARGE_EFFICIENCY,POS_X,POS_Y) = OLD;
    END IF;
    CREATE TEMPORARY TABLE __dummy__delta__delete__drones_cur_state WITH OIDS ON COMMIT DROP AS SELECT __dummy__delta__delete__drones_cur_state_a9_0.col0 AS col0, __dummy__delta__delete__drones_cur_state_a9_0.col1 AS col1, __dummy__delta__delete__drones_cur_state_a9_0.col2 AS col2, __dummy__delta__delete__drones_cur_state_a9_0.col3 AS col3, __dummy__delta__delete__drones_cur_state_a9_0.col4 AS col4, __dummy__delta__delete__drones_cur_state_a9_0.col5 AS col5, __dummy__delta__delete__drones_cur_state_a9_0.col6 AS col6, __dummy__delta__delete__drones_cur_state_a9_0.col7 AS col7, __dummy__delta__delete__drones_cur_state_a9_0.col8 AS col8 FROM (SELECT cur_processes_a5_3.UAV_ID AS col0, nodes_config_a4_2.NODE_ID AS col1, drones_cur_state_a9_0.VIEW_RANGE AS col2, drones_cur_state_a9_0.LOAD_NUM AS col3, drones_cur_state_a9_0.CUR_ELECTRICITY AS col4, drones_cur_state_a9_0.FLYING_STATE AS col5, drones_cur_state_a9_0.CUR_PATH_LENGTH AS col6, drones_cur_state_a9_0.CUR_RESOURCE_COST AS col7, drones_cur_state_a9_0.CUR_TIMESTAMP AS col8 FROM public.drones_cur_state AS drones_cur_state_a9_0, public.drones_config AS drones_config_a6_1, public.nodes_config AS nodes_config_a4_2, public.cur_processes AS cur_processes_a5_3 WHERE cur_processes_a5_3.UAV_ID = drones_config_a6_1.UAV_ID AND cur_processes_a5_3.UAV_ID = drones_cur_state_a9_0.UAV_ID AND nodes_config_a4_2.NODE_ID = drones_cur_state_a9_0.LOC_NODE_ID AND cur_processes_a5_3.PROC_ID = 0 AND NOT EXISTS ( SELECT * FROM (SELECT __temp__drone_self_info_a15_0.UAV_ID AS col0, __temp__drone_self_info_a15_0.LOC_NODE_ID AS col1, __temp__drone_self_info_a15_0.VIEW_RANGE AS col2, __temp__drone_self_info_a15_0.LOAD_NUM AS col3, __temp__drone_self_info_a15_0.CUR_ELECTRICITY AS col4, __temp__drone_self_info_a15_0.FLYING_STATE AS col5, __temp__drone_self_info_a15_0.CUR_PATH_LENGTH AS col6, __temp__drone_self_info_a15_0.CUR_RESOURCE_COST AS col7, __temp__drone_self_info_a15_0.FLEET_ID AS col8, __temp__drone_self_info_a15_0.SENSE_RANGE AS col9, __temp__drone_self_info_a15_0.LOAD_CAP AS col10, __temp__drone_self_info_a15_0.MAX_ELECTRICITY AS col11, __temp__drone_self_info_a15_0.CHARGE_EFFICIENCY AS col12, __temp__drone_self_info_a15_0.POS_X AS col13, __temp__drone_self_info_a15_0.POS_Y AS col14 FROM __temp__drone_self_info AS __temp__drone_self_info_a15_0  ) AS drone_self_info_a15 WHERE drone_self_info_a15.col14 IS NOT DISTINCT FROM nodes_config_a4_2.POS_Y AND drone_self_info_a15.col13 IS NOT DISTINCT FROM nodes_config_a4_2.POS_X AND drone_self_info_a15.col12 IS NOT DISTINCT FROM drones_config_a6_1.CHARGE_EFFICIENCY AND drone_self_info_a15.col11 IS NOT DISTINCT FROM drones_config_a6_1.MAX_ELECTRICITY AND drone_self_info_a15.col10 IS NOT DISTINCT FROM drones_config_a6_1.LOAD_CAP AND drone_self_info_a15.col9 IS NOT DISTINCT FROM drones_config_a6_1.SENSE_RANGE AND drone_self_info_a15.col8 IS NOT DISTINCT FROM drones_config_a6_1.FLEET_ID AND drone_self_info_a15.col7 IS NOT DISTINCT FROM drones_cur_state_a9_0.CUR_RESOURCE_COST AND drone_self_info_a15.col6 IS NOT DISTINCT FROM drones_cur_state_a9_0.CUR_PATH_LENGTH AND drone_self_info_a15.col5 IS NOT DISTINCT FROM drones_cur_state_a9_0.FLYING_STATE AND drone_self_info_a15.col4 IS NOT DISTINCT FROM drones_cur_state_a9_0.CUR_ELECTRICITY AND drone_self_info_a15.col3 IS NOT DISTINCT FROM drones_cur_state_a9_0.LOAD_NUM AND drone_self_info_a15.col2 IS NOT DISTINCT FROM drones_cur_state_a9_0.VIEW_RANGE AND drone_self_info_a15.col1 IS NOT DISTINCT FROM nodes_config_a4_2.NODE_ID AND drone_self_info_a15.col0 IS NOT DISTINCT FROM cur_processes_a5_3.UAV_ID ) ) AS __dummy__delta__delete__drones_cur_state_a9_0  ;
CREATE TEMPORARY TABLE __dummy__delta__insert__drones_cur_state WITH OIDS ON COMMIT DROP AS SELECT __dummy__delta__insert__drones_cur_state_a9_0.col0 AS col0, __dummy__delta__insert__drones_cur_state_a9_0.col1 AS col1, __dummy__delta__insert__drones_cur_state_a9_0.col2 AS col2, __dummy__delta__insert__drones_cur_state_a9_0.col3 AS col3, __dummy__delta__insert__drones_cur_state_a9_0.col4 AS col4, __dummy__delta__insert__drones_cur_state_a9_0.col5 AS col5, __dummy__delta__insert__drones_cur_state_a9_0.col6 AS col6, __dummy__delta__insert__drones_cur_state_a9_0.col7 AS col7, __dummy__delta__insert__drones_cur_state_a9_0.col8 AS col8 FROM (SELECT cur_processes_a5_3.UAV_ID AS col0, drone_self_info_a15_0.col1 AS col1, drone_self_info_a15_0.col2 AS col2, drone_self_info_a15_0.col3 AS col3, drone_self_info_a15_0.col4 AS col4, drone_self_info_a15_0.col5 AS col5, drone_self_info_a15_0.col6 AS col6, drone_self_info_a15_0.col7 AS col7, drones_cur_state_a9_2.CUR_TIMESTAMP AS col8 FROM (SELECT __temp__drone_self_info_a15_0.UAV_ID AS col0, __temp__drone_self_info_a15_0.LOC_NODE_ID AS col1, __temp__drone_self_info_a15_0.VIEW_RANGE AS col2, __temp__drone_self_info_a15_0.LOAD_NUM AS col3, __temp__drone_self_info_a15_0.CUR_ELECTRICITY AS col4, __temp__drone_self_info_a15_0.FLYING_STATE AS col5, __temp__drone_self_info_a15_0.CUR_PATH_LENGTH AS col6, __temp__drone_self_info_a15_0.CUR_RESOURCE_COST AS col7, __temp__drone_self_info_a15_0.FLEET_ID AS col8, __temp__drone_self_info_a15_0.SENSE_RANGE AS col9, __temp__drone_self_info_a15_0.LOAD_CAP AS col10, __temp__drone_self_info_a15_0.MAX_ELECTRICITY AS col11, __temp__drone_self_info_a15_0.CHARGE_EFFICIENCY AS col12, __temp__drone_self_info_a15_0.POS_X AS col13, __temp__drone_self_info_a15_0.POS_Y AS col14 FROM __temp__drone_self_info AS __temp__drone_self_info_a15_0  ) AS drone_self_info_a15_0, public.drones_config AS drones_config_a6_1, public.drones_cur_state AS drones_cur_state_a9_2, public.cur_processes AS cur_processes_a5_3 WHERE drones_config_a6_1.FLEET_ID = drone_self_info_a15_0.col8 AND drones_config_a6_1.LOAD_CAP = drone_self_info_a15_0.col10 AND cur_processes_a5_3.UAV_ID = drones_cur_state_a9_2.UAV_ID AND cur_processes_a5_3.UAV_ID = drones_config_a6_1.UAV_ID AND cur_processes_a5_3.UAV_ID = drone_self_info_a15_0.col0 AND drones_config_a6_1.CHARGE_EFFICIENCY = drone_self_info_a15_0.col12 AND drones_config_a6_1.SENSE_RANGE = drone_self_info_a15_0.col9 AND drones_config_a6_1.MAX_ELECTRICITY = drone_self_info_a15_0.col11 AND cur_processes_a5_3.PROC_ID = 0 AND NOT EXISTS ( SELECT * FROM public.drones_cur_state AS drones_cur_state_a9 WHERE drones_cur_state_a9.CUR_TIMESTAMP IS NOT DISTINCT FROM drones_cur_state_a9_2.CUR_TIMESTAMP AND drones_cur_state_a9.CUR_RESOURCE_COST IS NOT DISTINCT FROM drone_self_info_a15_0.col7 AND drones_cur_state_a9.CUR_PATH_LENGTH IS NOT DISTINCT FROM drone_self_info_a15_0.col6 AND drones_cur_state_a9.FLYING_STATE IS NOT DISTINCT FROM drone_self_info_a15_0.col5 AND drones_cur_state_a9.CUR_ELECTRICITY IS NOT DISTINCT FROM drone_self_info_a15_0.col4 AND drones_cur_state_a9.LOAD_NUM IS NOT DISTINCT FROM drone_self_info_a15_0.col3 AND drones_cur_state_a9.VIEW_RANGE IS NOT DISTINCT FROM drone_self_info_a15_0.col2 AND drones_cur_state_a9.LOC_NODE_ID IS NOT DISTINCT FROM drone_self_info_a15_0.col1 AND drones_cur_state_a9.UAV_ID IS NOT DISTINCT FROM cur_processes_a5_3.UAV_ID ) ) AS __dummy__delta__insert__drones_cur_state_a9_0  ; 
 FOR temprec IN ( SELECT * FROM __dummy__delta__delete__drones_cur_state) LOOP 
        DELETE FROM public.drones_cur_state WHERE (UAV_ID,LOC_NODE_ID,VIEW_RANGE,LOAD_NUM,CUR_ELECTRICITY,FLYING_STATE,CUR_PATH_LENGTH,CUR_RESOURCE_COST,CUR_TIMESTAMP) IS NOT DISTINCT FROM  (temprec.col0,temprec.col1,temprec.col2,temprec.col3,temprec.col4,temprec.col5,temprec.col6,temprec.col7,temprec.col8);
        END LOOP;
INSERT INTO public.drones_cur_state SELECT * FROM __dummy__delta__insert__drones_cur_state;
    RETURN NULL;
  EXCEPTION
    WHEN object_not_in_prerequisite_state THEN
        RAISE object_not_in_prerequisite_state USING MESSAGE = 'no permission to insert or update or delete from public.drone_self_info';
    WHEN OTHERS THEN
        GET STACKED DIAGNOSTICS text_var1 = RETURNED_SQLSTATE,
                                text_var2 = PG_EXCEPTION_DETAIL,
                                text_var3 = MESSAGE_TEXT;
        RAISE SQLSTATE 'DA000' USING MESSAGE = 'error on the trigger of public.drone_self_info ; error code: ' || text_var1 || ' ; ' || text_var2 ||' ; ' || text_var3;
        RETURN NULL;
  END;
  
$$;
DROP TRIGGER IF EXISTS drone_self_info_trigger ON public.drone_self_info;
CREATE TRIGGER drone_self_info_trigger
    INSTEAD OF INSERT OR UPDATE OR DELETE ON
      public.drone_self_info FOR EACH ROW EXECUTE PROCEDURE public.drone_self_info_procedure();

